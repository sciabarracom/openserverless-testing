name: openserverless-testing
#on: push

env:
  NGROK_TOKEN: ${{ secrets.NGROK_TOKEN }}
  #NGROK_PASSWORD: ${{ secrets.NGROK_PASSWORD }}
  OPS_BRANCH: main

jobs:
  op-testing:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Install ops
        run: |
             curl -sL bit.ly/get-ops | bash
             ops -info
             ops -t
      - name: Load secret
        uses: 1password/load-secrets-action@v2
        with:
          # Export loaded secrets as environment variables
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          NGROK_PASSWORD: op://OpenServerless/TESTING/NGROK_PASSWORD
          K3S_IP: op://OpenServerless/TESTING/K3S_IP
          MK8S_IP: op://OpenServerless/TESTING/MK8S_IP
          ID_RSA_B64: op://OpenServerless/TESTING/ID_RSA_B64
          #AKS_KUBECONFIG_B64: op://OpenServerless/TESTING/AKS_KUBECONFIG_B64
          #EKS_KUBECONFIG_B64: op://OpenServerless/TESTING/EKS_KUBECONFIG_B64
          #GKE_KUBECONFIG_B64: op://OpenServerless/TESTING/GKE_KUBECONFIG_B64
          #OPENSHIFT_KUBECONFIG_B64: op://OpenServerless/TESTING/OPENSHIFT_KUBECONFIG_B64
          #AWS_ACCESS_KEY_ID: op://OpenServerless/TESTING/AWS_ACCESS_KEY_ID
          #AWS_SECRET_ACCESS_KEY: op://OpenServerless/TESTING/AWS_SECRET_ACCESS_KEY
          #GCLOUD_SERVICE_ACCOUNT_B64: op://OpenServerless/TESTING/GCLOUD_SERVICE_ACCOUNT_B64

#      - name: Debug Action (if requested)
#        run:  .github/debugAction.sh
#      - name: Wait for Debug (if requested)
#        run: .github/waitIfDebug.sh
